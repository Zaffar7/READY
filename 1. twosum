Leetcode: 1  : 2sum
bruteforce(N2)
class Solution {
    public int[] twoSum(int[] nums, int target) {
    int []ans=new int [2];
    for(int i=0;i<nums.length-1;i++){
        for(int j=i+1;j<nums.length;j++){
            if(target==(nums[i]+nums[j])){
                ans[0]=i;
                ans[1]= j;
                break;
            }
        }
    }return ans;
    }
}
BETTER(N)
class Solution {
    public int[] twoSum(int[] nums, int target) {
    int []ans=new int [2];
    HashMap<Integer,Integer> map= new HashMap<>();
    for(int i=0;i<nums.length;i++)map.put(nums[i],i);
    for(int i=0;i<nums.length-1;i++){
            if(map.containsKey(target-nums[i]) && i!=map.get(target-nums[i])){
                ans[0]=i;
                ans[1]= map.get(target-nums[i]);
                break;
            }
        }
    return ans;
    }
}
